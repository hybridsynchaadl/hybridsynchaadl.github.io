mod THREEDRONESSYSTEM_REVU1D_INSTANCE-MODEL is
	including MODEL-TRANSITION-SYSTEM .
	
	--- AADL identifiers
	ops t nx : -> VarId [ctor] .
	ops inX currVX outVX inVX accX currX outX : -> FeatureId [ctor] .
	ops droneThread dotx droneProc environment dotdotx drone3 drone2 drone1 ThreeDronesSystemrevu1DInstance x drone : -> ComponentId [ctor] .
	ops output init exec : -> Location [ctor] .
	ops loopBoundNum transBoundNum : -> Nat .
	--- the initial state
	op initial : -> Object .
	eq initial = < ThreeDronesSystemrevu1DInstance : System |
		features : (
			none),
		subcomponents : (
			< drone1 : System |
				features : (
					< inX : DataInPort | 
						cache : null(Real),
						content : null(Real) ,
						properties : none >
					< inVX : DataInPort | 
						cache : null(Real),
						content : null(Real) ,
						properties : none >
					< outX : DataOutPort | 
						content : null(Real) ,
						properties : (DataModel::InitialValue => {{0}}) >
					< outVX : DataOutPort | 
						content : null(Real) ,
						properties : (DataModel::InitialValue => {{0}}) >),
				subcomponents : (
					< drone : System |
						features : (
							< currX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< currVX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< inX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< inVX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< outX : DataOutPort | 
								content : null(Real) ,
								properties : none >
							< outVX : DataOutPort | 
								content : null(Real) ,
								properties : none >
							< accX : DataOutPort | 
								content : null(Real) ,
								properties : none >),
						subcomponents : (
							< droneProc : Process |
								features : (
									< currX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< currVX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< inX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< inVX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< outX : DataOutPort | 
										content : null(Real) ,
										properties : none >
									< outVX : DataOutPort | 
										content : null(Real) ,
										properties : none >
									< accX : DataOutPort | 
										content : null(Real) ,
										properties : none >),
								subcomponents : (
									< droneThread : Thread |
										features : (
											< currX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< currVX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< inX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< inVX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< outX : DataOutPort | 
												content : null(Real) ,
												properties : none >
											< outVX : DataOutPort | 
												content : null(Real) ,
												properties : none >
											< accX : DataOutPort | 
												content : null(Real) ,
												properties : none >),
										subcomponents : (
											none),
										currState : (
											init),
										completeStates : (
											init),
										variables : (
											( nx : Real )),
										transitions : (
											(init -[ on dispatch ]-> exec {
												skip
											}) ;
											(exec -[ (abs((f[currX] - f[inX])) < [[0.3]]) ]-> output {
												(f{accX} := minus(f[currVX]))
											}) ;
											(exec -[ otherwise ]-> output {
												(v{nx} := minus(([[1.0]] * ((f[currX] - f[inX]) + ([[0.1]] * (f[currVX] - f[inVX])))))) ;
												if ((v[nx] > [[0.5]])){
													(f{accX} := [[40]])
												}
												(
												(elsif ((v[nx] > [[0]])){
													(f{accX} := [[0]])
												})
												)
												else {
													(f{accX} := minus([[40]]))
												}
												end if
											}) ;
											(output -[ [[true]] ]-> init {
												(f{outX} := f[currX]) ;
												(f{outVX} := f[currVX])
											})),
										loopBound : (
											loopBoundNum),
										transBound : (
											transBoundNum),
										varGen : (
											< "ThreeDronesSystemrevu1DInstance.drone1.drone.droneProc.droneThread" >
											),
										properties : (
											(HybridSynchAADL::SamplingTime => {{20.0 .. 30.0}}) ;
											(HybridSynchAADL::ResponseTime => {{60.0 .. 80.0}}) ;
											(HybridSynchAADL::Synchronous => {{true}}) ;
											(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
											(TimingProperties::Period => {{100.0}})),
										connections : (
											empty) 
										> ),
								properties : (
									(HybridSynchAADL::Synchronous => {{true}}) ;
									(TimingProperties::Period => {{100.0}})),
								connections : (
									(currVX --> droneThread .. currVX) ;
									(inX --> droneThread .. inX) ;
									(inVX --> droneThread .. inVX) ;
									(droneThread .. accX --> accX) ;
									(droneThread .. outVX --> outVX) ;
									(currX --> droneThread .. currX) ;
									(droneThread .. outX --> outX)) 
								> ),
						properties : (
							(HybridSynchAADL::SamplingTime => {{20.0 .. 30.0}}) ;
							(HybridSynchAADL::ResponseTime => {{60.0 .. 80.0}}) ;
							(HybridSynchAADL::Synchronous => {{true}}) ;
							(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
							(TimingProperties::Period => {{100.0}})),
						connections : (
							(droneProc .. outVX --> outVX) ;
							(inVX --> droneProc .. inVX) ;
							(currVX --> droneProc .. currVX) ;
							(currX --> droneProc .. currX) ;
							(droneProc .. outX --> outX) ;
							(inX --> droneProc .. inX) ;
							(droneProc .. accX --> accX)) 
						> 
					< environment : Env |
						features : (
							< currX : EnvOutPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >
							< currVX : EnvOutPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >
							< accX : EnvInPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >),
						subcomponents : (
							< dotdotx : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : null(Real),
								properties : (
									(DataModel::InitialValue => {{0}})),
								connections : (
									empty) 
								> 
							< dotx : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : null(Real),
								properties : (
									(DataModel::InitialValue => {{0}})),
								connections : (
									empty) 
								> 
							< x : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : param(Real),
								properties : (
									none),
								connections : (
									empty) 
								> ),
						currMode : (
							@@default@loc@@
							),
						jumps : (
							empty
							),
						flows : (
							((@@default@loc@@)[(dotx(t) = ((([[0.001]] * c[dotdotx]) * v[t]) + c[dotx])) ; (x(t) = ((c[x] + (([[0.001]] * c[dotx]) * v[t])) + (((([[1.0E-6]] * c[dotdotx]) * v[t]) * v[t]) / [[2.0]]))) ] )
							),
						sampling : (
							(droneThread : (rat(20.0),rat(30.0)))
							),
						response : (
							(droneThread : (rat(60.0),rat(80.0)))
							),
						varGen : (
							< "ThreeDronesSystemrevu1DInstance.drone1.environment" >
							),
						properties : (
							(HybridSynchAADL::Synchronous => {{true}}) ;
							(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
							(TimingProperties::Period => {{100.0}}) ;
							(HybridSynchAADL::ContinuousDynamics => {{"dotx(t) = ((0.001) * dotdotx * t) + dotx(0);                x(t) = (x(0) + (0.001 * dotx(0) * t) + ((0.000001) * dotdotx * t * t) / 2) ; "}}) ;
							(HybridSynchAADL::isEnvironment => {{true}})),
						connections : (
							(accX =>> dotdotx) ;
							(dotx ==> currVX) ;
							(x ==> currX)) 
						> ),
				properties : (
					(HybridSynchAADL::Synchronous => {{true}}) ;
					(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
					(TimingProperties::Period => {{100.0}})),
				connections : (
					(inX --> drone .. inX) ;
					(drone .. outX --> outX) ;
					(environment .. currX --> drone .. currX) ;
					(drone .. accX --> environment .. accX) ;
					(inVX --> drone .. inVX) ;
					(environment .. currVX --> drone .. currVX) ;
					(drone .. outVX --> outVX)) 
				> 
			< drone2 : System |
				features : (
					< inX : DataInPort | 
						cache : null(Real),
						content : null(Real) ,
						properties : none >
					< inVX : DataInPort | 
						cache : null(Real),
						content : null(Real) ,
						properties : none >
					< outX : DataOutPort | 
						content : null(Real) ,
						properties : (DataModel::InitialValue => {{0}}) >
					< outVX : DataOutPort | 
						content : null(Real) ,
						properties : (DataModel::InitialValue => {{0}}) >),
				subcomponents : (
					< drone : System |
						features : (
							< currX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< currVX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< inX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< inVX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< outX : DataOutPort | 
								content : null(Real) ,
								properties : none >
							< outVX : DataOutPort | 
								content : null(Real) ,
								properties : none >
							< accX : DataOutPort | 
								content : null(Real) ,
								properties : none >),
						subcomponents : (
							< droneProc : Process |
								features : (
									< currX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< currVX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< inX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< inVX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< outX : DataOutPort | 
										content : null(Real) ,
										properties : none >
									< outVX : DataOutPort | 
										content : null(Real) ,
										properties : none >
									< accX : DataOutPort | 
										content : null(Real) ,
										properties : none >),
								subcomponents : (
									< droneThread : Thread |
										features : (
											< currX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< currVX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< inX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< inVX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< outX : DataOutPort | 
												content : null(Real) ,
												properties : none >
											< outVX : DataOutPort | 
												content : null(Real) ,
												properties : none >
											< accX : DataOutPort | 
												content : null(Real) ,
												properties : none >),
										subcomponents : (
											none),
										currState : (
											init),
										completeStates : (
											init),
										variables : (
											( nx : Real )),
										transitions : (
											(init -[ on dispatch ]-> exec {
												skip
											}) ;
											(exec -[ (abs((f[currX] - f[inX])) < [[0.3]]) ]-> output {
												(f{accX} := minus(f[currVX]))
											}) ;
											(exec -[ otherwise ]-> output {
												(v{nx} := minus(([[1.0]] * ((f[currX] - f[inX]) + ([[0.1]] * (f[currVX] - f[inVX])))))) ;
												if ((v[nx] > [[0.5]])){
													(f{accX} := [[40]])
												}
												(
												(elsif ((v[nx] > [[0]])){
													(f{accX} := [[0]])
												})
												)
												else {
													(f{accX} := minus([[40]]))
												}
												end if
											}) ;
											(output -[ [[true]] ]-> init {
												(f{outX} := f[currX]) ;
												(f{outVX} := f[currVX])
											})),
										loopBound : (
											loopBoundNum),
										transBound : (
											transBoundNum),
										varGen : (
											< "ThreeDronesSystemrevu1DInstance.drone2.drone.droneProc.droneThread" >
											),
										properties : (
											(HybridSynchAADL::SamplingTime => {{20.0 .. 30.0}}) ;
											(HybridSynchAADL::ResponseTime => {{60.0 .. 80.0}}) ;
											(HybridSynchAADL::Synchronous => {{true}}) ;
											(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
											(TimingProperties::Period => {{100.0}})),
										connections : (
											empty) 
										> ),
								properties : (
									(HybridSynchAADL::Synchronous => {{true}}) ;
									(TimingProperties::Period => {{100.0}})),
								connections : (
									(inVX --> droneThread .. inVX) ;
									(droneThread .. outVX --> outVX) ;
									(inX --> droneThread .. inX) ;
									(droneThread .. accX --> accX) ;
									(droneThread .. outX --> outX) ;
									(currVX --> droneThread .. currVX) ;
									(currX --> droneThread .. currX)) 
								> ),
						properties : (
							(HybridSynchAADL::SamplingTime => {{20.0 .. 30.0}}) ;
							(HybridSynchAADL::ResponseTime => {{60.0 .. 80.0}}) ;
							(HybridSynchAADL::Synchronous => {{true}}) ;
							(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
							(TimingProperties::Period => {{100.0}})),
						connections : (
							(droneProc .. outVX --> outVX) ;
							(droneProc .. accX --> accX) ;
							(currX --> droneProc .. currX) ;
							(currVX --> droneProc .. currVX) ;
							(inX --> droneProc .. inX) ;
							(inVX --> droneProc .. inVX) ;
							(droneProc .. outX --> outX)) 
						> 
					< environment : Env |
						features : (
							< currX : EnvOutPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >
							< currVX : EnvOutPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >
							< accX : EnvInPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >),
						subcomponents : (
							< dotdotx : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : null(Real),
								properties : (
									(DataModel::InitialValue => {{0}})),
								connections : (
									empty) 
								> 
							< dotx : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : null(Real),
								properties : (
									(DataModel::InitialValue => {{0}})),
								connections : (
									empty) 
								> 
							< x : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : param(Real),
								properties : (
									none),
								connections : (
									empty) 
								> ),
						currMode : (
							@@default@loc@@
							),
						jumps : (
							empty
							),
						flows : (
							((@@default@loc@@)[(dotx(t) = ((([[0.001]] * c[dotdotx]) * v[t]) + c[dotx])) ; (x(t) = ((c[x] + (([[0.001]] * c[dotx]) * v[t])) + (((([[1.0E-6]] * c[dotdotx]) * v[t]) * v[t]) / [[2.0]]))) ] )
							),
						sampling : (
							(droneThread : (rat(20.0),rat(30.0)))
							),
						response : (
							(droneThread : (rat(60.0),rat(80.0)))
							),
						varGen : (
							< "ThreeDronesSystemrevu1DInstance.drone2.environment" >
							),
						properties : (
							(HybridSynchAADL::Synchronous => {{true}}) ;
							(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
							(TimingProperties::Period => {{100.0}}) ;
							(HybridSynchAADL::ContinuousDynamics => {{"dotx(t) = ((0.001) * dotdotx * t) + dotx(0);                x(t) = (x(0) + (0.001 * dotx(0) * t) + ((0.000001) * dotdotx * t * t) / 2) ; "}}) ;
							(HybridSynchAADL::isEnvironment => {{true}})),
						connections : (
							(x ==> currX) ;
							(accX =>> dotdotx) ;
							(dotx ==> currVX)) 
						> ),
				properties : (
					(HybridSynchAADL::Synchronous => {{true}}) ;
					(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
					(TimingProperties::Period => {{100.0}})),
				connections : (
					(drone .. outX --> outX) ;
					(drone .. outVX --> outVX) ;
					(environment .. currVX --> drone .. currVX) ;
					(inX --> drone .. inX) ;
					(environment .. currX --> drone .. currX) ;
					(drone .. accX --> environment .. accX) ;
					(inVX --> drone .. inVX)) 
				> 
			< drone3 : System |
				features : (
					< inX : DataInPort | 
						cache : null(Real),
						content : null(Real) ,
						properties : none >
					< inVX : DataInPort | 
						cache : null(Real),
						content : null(Real) ,
						properties : none >
					< outX : DataOutPort | 
						content : null(Real) ,
						properties : (DataModel::InitialValue => {{0}}) >
					< outVX : DataOutPort | 
						content : null(Real) ,
						properties : (DataModel::InitialValue => {{0}}) >),
				subcomponents : (
					< drone : System |
						features : (
							< currX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< currVX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< inX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< inVX : DataInPort | 
								cache : null(Real),
								content : null(Real) ,
								properties : none >
							< outX : DataOutPort | 
								content : null(Real) ,
								properties : none >
							< outVX : DataOutPort | 
								content : null(Real) ,
								properties : none >
							< accX : DataOutPort | 
								content : null(Real) ,
								properties : none >),
						subcomponents : (
							< droneProc : Process |
								features : (
									< currX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< currVX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< inX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< inVX : DataInPort | 
										cache : null(Real),
										content : null(Real) ,
										properties : none >
									< outX : DataOutPort | 
										content : null(Real) ,
										properties : none >
									< outVX : DataOutPort | 
										content : null(Real) ,
										properties : none >
									< accX : DataOutPort | 
										content : null(Real) ,
										properties : none >),
								subcomponents : (
									< droneThread : Thread |
										features : (
											< currX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< currVX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< inX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< inVX : DataInPort | 
												cache : null(Real),
												content : null(Real) ,
												properties : none >
											< outX : DataOutPort | 
												content : null(Real) ,
												properties : none >
											< outVX : DataOutPort | 
												content : null(Real) ,
												properties : none >
											< accX : DataOutPort | 
												content : null(Real) ,
												properties : none >),
										subcomponents : (
											none),
										currState : (
											init),
										completeStates : (
											init),
										variables : (
											( nx : Real )),
										transitions : (
											(init -[ on dispatch ]-> exec {
												skip
											}) ;
											(exec -[ (abs((f[currX] - f[inX])) < [[0.3]]) ]-> output {
												(f{accX} := minus(f[currVX]))
											}) ;
											(exec -[ otherwise ]-> output {
												(v{nx} := minus(([[1.0]] * ((f[currX] - f[inX]) + ([[0.1]] * (f[currVX] - f[inVX])))))) ;
												if ((v[nx] > [[0.5]])){
													(f{accX} := [[40]])
												}
												(
												(elsif ((v[nx] > [[0]])){
													(f{accX} := [[0]])
												})
												)
												else {
													(f{accX} := minus([[40]]))
												}
												end if
											}) ;
											(output -[ [[true]] ]-> init {
												(f{outX} := f[currX]) ;
												(f{outVX} := f[currVX])
											})),
										loopBound : (
											loopBoundNum),
										transBound : (
											transBoundNum),
										varGen : (
											< "ThreeDronesSystemrevu1DInstance.drone3.drone.droneProc.droneThread" >
											),
										properties : (
											(HybridSynchAADL::SamplingTime => {{20.0 .. 30.0}}) ;
											(HybridSynchAADL::ResponseTime => {{60.0 .. 80.0}}) ;
											(HybridSynchAADL::Synchronous => {{true}}) ;
											(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
											(TimingProperties::Period => {{100.0}})),
										connections : (
											empty) 
										> ),
								properties : (
									(HybridSynchAADL::Synchronous => {{true}}) ;
									(TimingProperties::Period => {{100.0}})),
								connections : (
									(droneThread .. accX --> accX) ;
									(droneThread .. outX --> outX) ;
									(currVX --> droneThread .. currVX) ;
									(currX --> droneThread .. currX) ;
									(inX --> droneThread .. inX) ;
									(inVX --> droneThread .. inVX) ;
									(droneThread .. outVX --> outVX)) 
								> ),
						properties : (
							(HybridSynchAADL::SamplingTime => {{20.0 .. 30.0}}) ;
							(HybridSynchAADL::ResponseTime => {{60.0 .. 80.0}}) ;
							(HybridSynchAADL::Synchronous => {{true}}) ;
							(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
							(TimingProperties::Period => {{100.0}})),
						connections : (
							(droneProc .. outVX --> outVX) ;
							(currVX --> droneProc .. currVX) ;
							(droneProc .. accX --> accX) ;
							(droneProc .. outX --> outX) ;
							(inX --> droneProc .. inX) ;
							(inVX --> droneProc .. inVX) ;
							(currX --> droneProc .. currX)) 
						> 
					< environment : Env |
						features : (
							< currX : EnvOutPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >
							< currVX : EnvOutPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >
							< accX : EnvInPort | 
								target : droneThread,
								envCache : null(Real),
								content : null(Real) ,
								properties : none >),
						subcomponents : (
							< dotdotx : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : null(Real),
								properties : (
									(DataModel::InitialValue => {{0}})),
								connections : (
									empty) 
								> 
							< dotx : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : null(Real),
								properties : (
									(DataModel::InitialValue => {{0}})),
								connections : (
									empty) 
								> 
							< x : Data |
								features : (
									none),
								subcomponents : (
									none),
								value : param(Real),
								properties : (
									none),
								connections : (
									empty) 
								> ),
						currMode : (
							@@default@loc@@
							),
						jumps : (
							empty
							),
						flows : (
							((@@default@loc@@)[(dotx(t) = ((([[0.001]] * c[dotdotx]) * v[t]) + c[dotx])) ; (x(t) = ((c[x] + (([[0.001]] * c[dotx]) * v[t])) + (((([[1.0E-6]] * c[dotdotx]) * v[t]) * v[t]) / [[2.0]]))) ] )
							),
						sampling : (
							(droneThread : (rat(20.0),rat(30.0)))
							),
						response : (
							(droneThread : (rat(60.0),rat(80.0)))
							),
						varGen : (
							< "ThreeDronesSystemrevu1DInstance.drone3.environment" >
							),
						properties : (
							(HybridSynchAADL::Synchronous => {{true}}) ;
							(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
							(TimingProperties::Period => {{100.0}}) ;
							(HybridSynchAADL::ContinuousDynamics => {{"dotx(t) = ((0.001) * dotdotx * t) + dotx(0);                x(t) = (x(0) + (0.001 * dotx(0) * t) + ((0.000001) * dotdotx * t * t) / 2) ; "}}) ;
							(HybridSynchAADL::isEnvironment => {{true}})),
						connections : (
							(accX =>> dotdotx) ;
							(x ==> currX) ;
							(dotx ==> currVX)) 
						> ),
				properties : (
					(HybridSynchAADL::Synchronous => {{true}}) ;
					(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
					(TimingProperties::Period => {{100.0}})),
				connections : (
					(drone .. accX --> environment .. accX) ;
					(inX --> drone .. inX) ;
					(drone .. outX --> outX) ;
					(drone .. outVX --> outVX) ;
					(environment .. currX --> drone .. currX) ;
					(inVX --> drone .. inVX) ;
					(environment .. currVX --> drone .. currVX)) 
				> ),
		properties : (
			(HybridSynchAADL::Synchronous => {{true}}) ;
			(HybridSynchAADL::MaxClockDeviation => {{5.0}}) ;
			(TimingProperties::Period => {{100.0}})),
		connections : (
			(drone1 .. outVX --> drone2 .. inVX) ;
			(drone1 .. outX --> drone2 .. inX) ;
			(drone3 .. outVX --> drone1 .. inVX) ;
			(drone2 .. outVX --> drone3 .. inVX) ;
			(drone2 .. outX --> drone3 .. inX) ;
			(drone3 .. outX --> drone1 .. inX)) 
		>  .
endm
