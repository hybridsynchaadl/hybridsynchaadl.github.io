package Environment
public
	with Base_Types;
	with Data_Model;
	with Hybrid_SynchAADL;
	
	system Environment
		features
			curr_water : out data port Base_Types::Float {Data_Model::Initial_Value => ("0");};
			increased_water : in data port Base_Types::Float;
			power: in data port Base_Types::Float;
			decreased_water : out data port Base_Types::Float {Data_Model::Initial_Value => ("0");};
			on_control : in event port;
			off_control : in event port;
		properties
			Hybrid_SynchAADL::isEnvironment => true;
	end Environment;
	
	system implementation Environment.impl
		subcomponents
			water: data Base_Types::Float;
			decrease: data Base_Types::Float;
			increase: data Base_Types::Float;
			pump_power: data Base_Types::Float;
		connections
			C1: port water -> curr_water;
			C2: port increased_water -> increase;
			C3: port decrease -> decreased_water;
			C4: port power -> pump_power;
		modes
			off: initial mode;
			on: mode;
			
			off -[on_control]-> on;
			off -[off_control]-> off;
			
			on -[on_control]-> on;
			on -[off_control]-> off;
		
		properties
			Hybrid_SynchAADL::ContinuousDynamics =>
				"decrease(t) = (50 * 0.001 * t) ; water(t) = water(0) + pump_power - (50 * 0.001 * t) + increase" in modes(on),
				"decrease(t) = (50 * 0.001 * t) ; water(t) = water(0) - (50 * 0.001 * t) + increase" in modes(off);
	end Environment.impl;
end Environment;
