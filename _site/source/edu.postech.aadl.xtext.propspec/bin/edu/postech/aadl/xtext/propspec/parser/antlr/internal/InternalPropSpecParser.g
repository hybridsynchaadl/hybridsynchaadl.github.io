/*
 * generated by Xtext
 */
parser grammar InternalPropSpecParser;

options {
	tokenVocab=InternalPropSpecLexer;
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@header {
package edu.postech.aadl.xtext.propspec.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.IUnorderedGroupHelper.UnorderedGroupState;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import edu.postech.aadl.xtext.propspec.services.PropSpecGrammarAccess;

}

@members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 

	private PropSpecGrammarAccess grammarAccess;
	 	
	public InternalPropSpecParser(TokenStream input, PropSpecGrammarAccess grammarAccess) {
		this(input);
		this.grammarAccess = grammarAccess;
		registerRules(grammarAccess.getGrammar());
	}
	
	@Override
	protected String getFirstRuleName() {
		return "Top";	
	} 
	   	   	
	@Override
	protected PropSpecGrammarAccess getGrammarAccess() {
		return grammarAccess;
	}
}

@rulecatch { 
	catch (RecognitionException re) { 
	    recover(input,re); 
	    appendSkippedTokens();
	}
}




// Entry rule entryRuleTop
entryRuleTop returns [EObject current=null]
	@init { 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getTopAccess().getUnorderedGroup()
		);
	}
	:
	{ newCompositeNode(grammarAccess.getTopRule()); }
	 iv_ruleTop=ruleTop 
	 { $current=$iv_ruleTop.current; } 
	 EOF 
;
finally {
	myUnorderedGroupState.restore();
}

// Rule Top
ruleTop returns [EObject current=null] 
    @init { enterRule(); 
		UnorderedGroupState myUnorderedGroupState = getUnorderedGroupHelper().snapShot(
			grammarAccess.getTopAccess().getUnorderedGroup()
		);
    }
    @after { leaveRule(); }:
(

(
	{ 
	  getUnorderedGroupHelper().enter(grammarAccess.getTopAccess().getUnorderedGroup());
	}
	(
		(

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTopAccess().getUnorderedGroup(), 0)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTopAccess().getUnorderedGroup(), 0);
	 				}
					({true}?=>(
	otherlv_1=Name
    {
    	newLeafNode(otherlv_1, grammarAccess.getTopAccess().getNameKeyword_0_0());
    }

	otherlv_2=Colon
    {
    	newLeafNode(otherlv_2, grammarAccess.getTopAccess().getColonKeyword_0_1());
    }
(
(
		lv_name_3_0=RULE_ID
		{
			newLeafNode(lv_name_3_0, grammarAccess.getTopAccess().getNameIDTerminalRuleCall_0_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_3_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_4=Semicolon
    {
    	newLeafNode(otherlv_4, grammarAccess.getTopAccess().getSemicolonKeyword_0_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTopAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTopAccess().getUnorderedGroup(), 1)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTopAccess().getUnorderedGroup(), 1);
	 				}
					({true}?=>(
	otherlv_5=Model
    {
    	newLeafNode(otherlv_5, grammarAccess.getTopAccess().getModelKeyword_1_0());
    }

	otherlv_6=Colon
    {
    	newLeafNode(otherlv_6, grammarAccess.getTopAccess().getColonKeyword_1_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getTopAccess().getModelComponentClassifierCrossReference_1_2_0()); 
	    }
		ruleQCREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_8=Semicolon
    {
    	newLeafNode(otherlv_8, grammarAccess.getTopAccess().getSemicolonKeyword_1_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTopAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTopAccess().getUnorderedGroup(), 2)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTopAccess().getUnorderedGroup(), 2);
	 				}
					({true}?=>(
	otherlv_9=Instance
    {
    	newLeafNode(otherlv_9, grammarAccess.getTopAccess().getInstanceKeyword_2_0());
    }

	otherlv_10=Colon
    {
    	newLeafNode(otherlv_10, grammarAccess.getTopAccess().getColonKeyword_2_1());
    }
(
(
		lv_path_11_0=RULE_STRING
		{
			newLeafNode(lv_path_11_0, grammarAccess.getTopAccess().getPathSTRINGTerminalRuleCall_2_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTopRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"path",
        		lv_path_11_0, 
        		"org.osate.xtext.aadl2.properties.Properties.STRING");
	    }

)
)
	otherlv_12=Semicolon
    {
    	newLeafNode(otherlv_12, grammarAccess.getTopAccess().getSemicolonKeyword_2_3());
    }
))
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTopAccess().getUnorderedGroup());
	 				}
 				)
			)  |

			( 
				{getUnorderedGroupHelper().canSelect(grammarAccess.getTopAccess().getUnorderedGroup(), 3)}?=>(
					{ 
	 				  getUnorderedGroupHelper().select(grammarAccess.getTopAccess().getUnorderedGroup(), 3);
	 				}
					({true}?=>((
(
		{ 
	        newCompositeNode(grammarAccess.getTopAccess().getPropositionPropositionParserRuleCall_3_0_0()); 
	    }
		lv_proposition_13_0=ruleProposition		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopRule());
	        }
       		add(
       			$current, 
       			"proposition",
        		lv_proposition_13_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.Proposition");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(
(
		{ 
	        newCompositeNode(grammarAccess.getTopAccess().getPropertyPropertyParserRuleCall_3_1_0()); 
	    }
		lv_property_14_0=ruleProperty		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTopRule());
	        }
       		add(
       			$current, 
       			"property",
        		lv_property_14_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.Property");
	        afterParserOrEnumRuleCall();
	    }

)
)))+
					{ 
	 				  getUnorderedGroupHelper().returnFromSelection(grammarAccess.getTopAccess().getUnorderedGroup());
	 				}
 				)
			)  

		)+
	  	{getUnorderedGroupHelper().canLeave(grammarAccess.getTopAccess().getUnorderedGroup())}?	
	)
)
	{ 
	  getUnorderedGroupHelper().leave(grammarAccess.getTopAccess().getUnorderedGroup());
	}

)
;
finally {
	myUnorderedGroupState.restore();
}





// Entry rule entryRuleProperty
entryRuleProperty returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyRule()); }
	 iv_ruleProperty=ruleProperty 
	 { $current=$iv_ruleProperty.current; } 
	 EOF 
;

// Rule Property
ruleProperty returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getReachabilityParserRuleCall_0()); 
    }
    this_Reachability_0=ruleReachability
    {
        $current = $this_Reachability_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyAccess().getInvariantParserRuleCall_1()); 
    }
    this_Invariant_1=ruleInvariant
    {
        $current = $this_Invariant_1.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleReachability
entryRuleReachability returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getReachabilityRule()); }
	 iv_ruleReachability=ruleReachability 
	 { $current=$iv_ruleReachability.current; } 
	 EOF 
;

// Rule Reachability
ruleReachability returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Reachability
    {
    	newLeafNode(otherlv_0, grammarAccess.getReachabilityAccess().getReachabilityKeyword_0());
    }

	otherlv_1=LeftSquareBracket
    {
    	newLeafNode(otherlv_1, grammarAccess.getReachabilityAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getReachabilityAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getReachabilityRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_3=RightSquareBracket
    {
    	newLeafNode(otherlv_3, grammarAccess.getReachabilityAccess().getRightSquareBracketKeyword_3());
    }

	otherlv_4=Colon
    {
    	newLeafNode(otherlv_4, grammarAccess.getReachabilityAccess().getColonKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getReachabilityAccess().getInitCondPSExpressionParserRuleCall_5_0_0()); 
	    }
		lv_initCond_5_0=rulePSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReachabilityRule());
	        }
       		set(
       			$current, 
       			"initCond",
        		lv_initCond_5_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.PSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=EqualsSignEqualsSignGreaterThanSign
    {
    	newLeafNode(otherlv_6, grammarAccess.getReachabilityAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_5_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getReachabilityAccess().getGoalCondPSExpressionParserRuleCall_6_0()); 
	    }
		lv_goalCond_7_0=rulePSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReachabilityRule());
	        }
       		set(
       			$current, 
       			"goalCond",
        		lv_goalCond_7_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.PSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_8=In
    {
    	newLeafNode(otherlv_8, grammarAccess.getReachabilityAccess().getInKeyword_7());
    }

	otherlv_9=Time
    {
    	newLeafNode(otherlv_9, grammarAccess.getReachabilityAccess().getTimeKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReachabilityAccess().getBoundINTVALUEParserRuleCall_9_0()); 
	    }
		lv_bound_10_0=ruleINTVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReachabilityRule());
	        }
       		set(
       			$current, 
       			"bound",
        		lv_bound_10_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTVALUE");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_11=Semicolon
    {
    	newLeafNode(otherlv_11, grammarAccess.getReachabilityAccess().getSemicolonKeyword_10());
    }
)
;





// Entry rule entryRuleInvariant
entryRuleInvariant returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getInvariantRule()); }
	 iv_ruleInvariant=ruleInvariant 
	 { $current=$iv_ruleInvariant.current; } 
	 EOF 
;

// Rule Invariant
ruleInvariant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Invariant
    {
    	newLeafNode(otherlv_0, grammarAccess.getInvariantAccess().getInvariantKeyword_0());
    }

	otherlv_1=LeftSquareBracket
    {
    	newLeafNode(otherlv_1, grammarAccess.getInvariantAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getInvariantAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getInvariantRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_3=RightSquareBracket
    {
    	newLeafNode(otherlv_3, grammarAccess.getInvariantAccess().getRightSquareBracketKeyword_3());
    }

	otherlv_4=Colon
    {
    	newLeafNode(otherlv_4, grammarAccess.getInvariantAccess().getColonKeyword_4());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getInvariantAccess().getInitCondPSExpressionParserRuleCall_5_0_0()); 
	    }
		lv_initCond_5_0=rulePSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvariantRule());
	        }
       		set(
       			$current, 
       			"initCond",
        		lv_initCond_5_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.PSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=EqualsSignEqualsSignGreaterThanSign
    {
    	newLeafNode(otherlv_6, grammarAccess.getInvariantAccess().getEqualsSignEqualsSignGreaterThanSignKeyword_5_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getInvariantAccess().getGoalCondPSExpressionParserRuleCall_6_0()); 
	    }
		lv_goalCond_7_0=rulePSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvariantRule());
	        }
       		set(
       			$current, 
       			"goalCond",
        		lv_goalCond_7_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.PSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_8=In
    {
    	newLeafNode(otherlv_8, grammarAccess.getInvariantAccess().getInKeyword_7());
    }

	otherlv_9=Time
    {
    	newLeafNode(otherlv_9, grammarAccess.getInvariantAccess().getTimeKeyword_8());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getInvariantAccess().getBoundINTVALUEParserRuleCall_9_0()); 
	    }
		lv_bound_10_0=ruleINTVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getInvariantRule());
	        }
       		set(
       			$current, 
       			"bound",
        		lv_bound_10_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTVALUE");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_11=Semicolon
    {
    	newLeafNode(otherlv_11, grammarAccess.getInvariantAccess().getSemicolonKeyword_10());
    }
)
;





// Entry rule entryRuleProposition
entryRuleProposition returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropositionRule()); }
	 iv_ruleProposition=ruleProposition 
	 { $current=$iv_ruleProposition.current; } 
	 EOF 
;

// Rule Proposition
ruleProposition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Proposition
    {
    	newLeafNode(otherlv_0, grammarAccess.getPropositionAccess().getPropositionKeyword_0());
    }

	otherlv_1=LeftSquareBracket
    {
    	newLeafNode(otherlv_1, grammarAccess.getPropositionAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		lv_name_2_0=RULE_ID
		{
			newLeafNode(lv_name_2_0, grammarAccess.getPropositionAccess().getNameIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropositionRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"name",
        		lv_name_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_3=RightSquareBracket
    {
    	newLeafNode(otherlv_3, grammarAccess.getPropositionAccess().getRightSquareBracketKeyword_3());
    }

	otherlv_4=Colon
    {
    	newLeafNode(otherlv_4, grammarAccess.getPropositionAccess().getColonKeyword_4());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropositionAccess().getExpressionPSExpressionParserRuleCall_5_0()); 
	    }
		lv_expression_5_0=rulePSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropositionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_5_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.PSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_6=Semicolon
    {
    	newLeafNode(otherlv_6, grammarAccess.getPropositionAccess().getSemicolonKeyword_6());
    }
)
;







// Entry rule entryRuleSYMBOLIC
entryRuleSYMBOLIC returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSYMBOLICRule()); }
	 iv_ruleSYMBOLIC=ruleSYMBOLIC 
	 { $current=$iv_ruleSYMBOLIC.current; } 
	 EOF 
;

// Rule SYMBOLIC
ruleSYMBOLIC returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_name_0_0=
	Symbolic
    {
        newLeafNode(lv_name_0_0, grammarAccess.getSYMBOLICAccess().getNameSymbolicKeyword_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSYMBOLICRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "symbolic");
	    }

)
)
;





// Entry rule entryRuleRANDOM
entryRuleRANDOM returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRANDOMRule()); }
	 iv_ruleRANDOM=ruleRANDOM 
	 { $current=$iv_ruleRANDOM.current; } 
	 EOF 
;

// Rule RANDOM
ruleRANDOM returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_name_0_0=
	Random
    {
        newLeafNode(lv_name_0_0, grammarAccess.getRANDOMAccess().getNameRandomKeyword_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRANDOMRule());
	        }
       		setWithLastConsumed($current, "name", lv_name_0_0, "random");
	    }

)
)
	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getRANDOMAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRANDOMAccess().getSeedINTVALUEParserRuleCall_2_0()); 
	    }
		lv_seed_2_0=ruleINTVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRANDOMRule());
	        }
       		set(
       			$current, 
       			"seed",
        		lv_seed_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTVALUE");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=RightParenthesis
    {
    	newLeafNode(otherlv_3, grammarAccess.getRANDOMAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRulePSExpression
entryRulePSExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPSExpressionRule()); }
	 iv_rulePSExpression=rulePSExpression 
	 { $current=$iv_rulePSExpression.current; } 
	 EOF 
;

// Rule PSExpression
rulePSExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPSExpressionAccess().getScopedExpressionParserRuleCall_0_0()); 
    }
    this_ScopedExpression_0=ruleScopedExpression
    {
        $current = $this_ScopedExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPSExpressionAccess().getBinaryExpressionLeftAction_0_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=
	And
    {
        newLeafNode(lv_op_2_1, grammarAccess.getPSExpressionAccess().getOpAndKeyword_0_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPSExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=
	Or
    {
        newLeafNode(lv_op_2_2, grammarAccess.getPSExpressionAccess().getOpOrKeyword_0_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPSExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=
	Xor
    {
        newLeafNode(lv_op_2_3, grammarAccess.getPSExpressionAccess().getOpXorKeyword_0_1_1_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPSExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPSExpressionAccess().getRightPSExpressionParserRuleCall_0_1_2_0()); 
	    }
		lv_right_3_0=rulePSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPSExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.PSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPSExpressionAccess().getRelationParserRuleCall_1_0()); 
    }
    this_Relation_4=ruleRelation
    {
        $current = $this_Relation_4.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getPSExpressionAccess().getBinaryExpressionLeftAction_1_1_0(),
            $current);
    }
)(
(
(
		lv_op_6_1=
	And
    {
        newLeafNode(lv_op_6_1, grammarAccess.getPSExpressionAccess().getOpAndKeyword_1_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPSExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_1, null);
	    }

    |		lv_op_6_2=
	Or
    {
        newLeafNode(lv_op_6_2, grammarAccess.getPSExpressionAccess().getOpOrKeyword_1_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPSExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_2, null);
	    }

    |		lv_op_6_3=
	Xor
    {
        newLeafNode(lv_op_6_3, grammarAccess.getPSExpressionAccess().getOpXorKeyword_1_1_1_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getPSExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_6_3, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getPSExpressionAccess().getRightRelationParserRuleCall_1_1_2_0()); 
	    }
		lv_right_7_0=ruleRelation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPSExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_7_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.Relation");
	        afterParserOrEnumRuleCall();
	    }

)
))*))
;





// Entry rule entryRuleRelation
entryRuleRelation returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRelationRule()); }
	 iv_ruleRelation=ruleRelation 
	 { $current=$iv_ruleRelation.current; } 
	 EOF 
;

// Rule Relation
ruleRelation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getModifiedExpressionParserRuleCall_0_0()); 
    }
    this_ModifiedExpression_0=ruleModifiedExpression
    {
        $current = $this_ModifiedExpression_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getRelationAccess().getBinaryExpressionLeftAction_0_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=
	EqualsSign
    {
        newLeafNode(lv_op_2_1, grammarAccess.getRelationAccess().getOpEqualsSignKeyword_0_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=
	ExclamationMarkEqualsSign
    {
        newLeafNode(lv_op_2_2, grammarAccess.getRelationAccess().getOpExclamationMarkEqualsSignKeyword_0_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

    |		lv_op_2_3=
	LessThanSign
    {
        newLeafNode(lv_op_2_3, grammarAccess.getRelationAccess().getOpLessThanSignKeyword_0_1_1_0_2());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_3, null);
	    }

    |		lv_op_2_4=
	LessThanSignEqualsSign
    {
        newLeafNode(lv_op_2_4, grammarAccess.getRelationAccess().getOpLessThanSignEqualsSignKeyword_0_1_1_0_3());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_4, null);
	    }

    |		lv_op_2_5=
	GreaterThanSign
    {
        newLeafNode(lv_op_2_5, grammarAccess.getRelationAccess().getOpGreaterThanSignKeyword_0_1_1_0_4());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_5, null);
	    }

    |		lv_op_2_6=
	GreaterThanSignEqualsSign
    {
        newLeafNode(lv_op_2_6, grammarAccess.getRelationAccess().getOpGreaterThanSignEqualsSignKeyword_0_1_1_0_5());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getRelationRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_6, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getRelationAccess().getRightModifiedExpressionParserRuleCall_0_1_2_0()); 
	    }
		lv_right_3_0=ruleModifiedExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRelationRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.ModifiedExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
    |(
	otherlv_4=QuestionMark
    {
    	newLeafNode(otherlv_4, grammarAccess.getRelationAccess().getQuestionMarkKeyword_1_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getRelationAccess().getPropRefParserRuleCall_1_1()); 
    }
    this_PropRef_5=rulePropRef
    {
        $current = $this_PropRef_5.current;
        afterParserOrEnumRuleCall();
    }
))
;





// Entry rule entryRuleModifiedExpression
entryRuleModifiedExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getModifiedExpressionRule()); }
	 iv_ruleModifiedExpression=ruleModifiedExpression 
	 { $current=$iv_ruleModifiedExpression.current; } 
	 EOF 
;

// Rule ModifiedExpression
ruleModifiedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getModifiedExpressionAccess().getSimpleExpressionParserRuleCall_0()); 
    }
    this_SimpleExpression_0=ruleSimpleExpression
    {
        $current = $this_SimpleExpression_0.current;
        afterParserOrEnumRuleCall();
    }

    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getModifiedExpressionAccess().getUnaryExpressionAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=
	PlusSign
    {
        newLeafNode(lv_op_2_1, grammarAccess.getModifiedExpressionAccess().getOpPlusSignKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifiedExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=
	HyphenMinus
    {
        newLeafNode(lv_op_2_2, grammarAccess.getModifiedExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifiedExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getModifiedExpressionAccess().getChildSimpleExpressionParserRuleCall_1_2_0()); 
	    }
		lv_child_3_0=ruleSimpleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getModifiedExpressionRule());
	        }
       		set(
       			$current, 
       			"child",
        		lv_child_3_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.SimpleExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleSimpleExpression
entryRuleSimpleExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSimpleExpressionRule()); }
	 iv_ruleSimpleExpression=ruleSimpleExpression 
	 { $current=$iv_ruleSimpleExpression.current; } 
	 EOF 
;

// Rule SimpleExpression
ruleSimpleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSimpleExpressionAccess().getTermParserRuleCall_0()); 
    }
    this_Term_0=ruleTerm
    {
        $current = $this_Term_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getSimpleExpressionAccess().getBinaryExpressionLeftAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=
	PlusSign
    {
        newLeafNode(lv_op_2_1, grammarAccess.getSimpleExpressionAccess().getOpPlusSignKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=
	HyphenMinus
    {
        newLeafNode(lv_op_2_2, grammarAccess.getSimpleExpressionAccess().getOpHyphenMinusKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleExpressionRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSimpleExpressionAccess().getRightTermParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleTerm		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSimpleExpressionRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.Term");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleTerm
entryRuleTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getTermRule()); }
	 iv_ruleTerm=ruleTerm 
	 { $current=$iv_ruleTerm.current; } 
	 EOF 
;

// Rule Term
ruleTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getTermAccess().getValueParserRuleCall_0_0()); 
    }
    this_Value_0=ruleValue
    {
        $current = $this_Value_0.current;
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getTermAccess().getBinaryExpressionLeftAction_0_1_0(),
            $current);
    }
)(
(
(
		lv_op_2_1=
	Asterisk
    {
        newLeafNode(lv_op_2_1, grammarAccess.getTermAccess().getOpAsteriskKeyword_0_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_1, null);
	    }

    |		lv_op_2_2=
	Solidus
    {
        newLeafNode(lv_op_2_2, grammarAccess.getTermAccess().getOpSolidusKeyword_0_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_2_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getRightValueParserRuleCall_0_1_2_0()); 
	    }
		lv_right_3_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.Value");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getTermAccess().getUnaryExpressionAction_1_0(),
            $current);
    }
)(
(
(
		lv_op_5_1=
	Abs
    {
        newLeafNode(lv_op_5_1, grammarAccess.getTermAccess().getOpAbsKeyword_1_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_1, null);
	    }

    |		lv_op_5_2=
	Not
    {
        newLeafNode(lv_op_5_2, grammarAccess.getTermAccess().getOpNotKeyword_1_1_0_1());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTermRule());
	        }
       		setWithLastConsumed($current, "op", lv_op_5_2, null);
	    }

)

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getTermAccess().getChildValueParserRuleCall_1_2_0()); 
	    }
		lv_child_6_0=ruleValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getTermRule());
	        }
       		set(
       			$current, 
       			"child",
        		lv_child_6_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.Value");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;





// Entry rule entryRuleValue
entryRuleValue returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getValueRule()); }
	 iv_ruleValue=ruleValue 
	 { $current=$iv_ruleValue.current; } 
	 EOF 
;

// Rule Value
ruleValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getValueAccess().getValueAction_0_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getValueValueConstantParserRuleCall_0_1_0()); 
	    }
		lv_value_1_0=ruleValueConstant		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_1_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.ValueConstant");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getValueAccess().getValueAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getValueAccess().getValueContainmentPathParserRuleCall_1_1_0()); 
	    }
		lv_value_3_0=ruleContainmentPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getValueRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_3_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPath");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(
	otherlv_4=LeftParenthesis
    {
    	newLeafNode(otherlv_4, grammarAccess.getValueAccess().getLeftParenthesisKeyword_2_0());
    }

	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueAccess().getPSExpressionParserRuleCall_2_1()); 
    }
    this_PSExpression_5=rulePSExpression
    {
        $current = $this_PSExpression_5.current;
        afterParserOrEnumRuleCall();
    }

	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getValueAccess().getRightParenthesisKeyword_2_2());
    }
))
;





// Entry rule entryRulePropRef
entryRulePropRef returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropRefRule()); }
	 iv_rulePropRef=rulePropRef 
	 { $current=$iv_rulePropRef.current; } 
	 EOF 
;

// Rule PropRef
rulePropRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getPropRefRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getPropRefAccess().getDefPropositionCrossReference_0()); 
	}

)
)
;





// Entry rule entryRuleScopedExpression
entryRuleScopedExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getScopedExpressionRule()); }
	 iv_ruleScopedExpression=ruleScopedExpression 
	 { $current=$iv_ruleScopedExpression.current; } 
	 EOF 
;

// Rule ScopedExpression
ruleScopedExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getScopedExpressionAccess().getPathContainmentPathParserRuleCall_0_0()); 
	    }
		lv_path_0_0=ruleContainmentPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopedExpressionRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPath");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=VerticalLine
    {
    	newLeafNode(otherlv_1, grammarAccess.getScopedExpressionAccess().getVerticalLineKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getScopedExpressionAccess().getExpressionPSExpressionParserRuleCall_2_0()); 
	    }
		lv_expression_2_0=rulePSExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getScopedExpressionRule());
	        }
       		set(
       			$current, 
       			"expression",
        		lv_expression_2_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.PSExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleValueConstant
entryRuleValueConstant returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getValueConstantRule()); }
	 iv_ruleValueConstant=ruleValueConstant 
	 { $current=$iv_ruleValueConstant.current; } 
	 EOF 
;

// Rule ValueConstant
ruleValueConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueConstantAccess().getStringTermParserRuleCall_0()); 
    }
    this_StringTerm_0=ruleStringTerm
    {
        $current = $this_StringTerm_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueConstantAccess().getUnsignedRealTermParserRuleCall_1()); 
    }
    this_UnsignedRealTerm_1=ruleUnsignedRealTerm
    {
        $current = $this_UnsignedRealTerm_1.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueConstantAccess().getUnsignedIntegerTermParserRuleCall_2()); 
    }
    this_UnsignedIntegerTerm_2=ruleUnsignedIntegerTerm
    {
        $current = $this_UnsignedIntegerTerm_2.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getValueConstantAccess().getBooleanLiteralParserRuleCall_3()); 
    }
    this_BooleanLiteral_3=ruleBooleanLiteral
    {
        $current = $this_BooleanLiteral_3.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleUnsignedRealTerm
entryRuleUnsignedRealTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUnsignedRealTermRule()); }
	 iv_ruleUnsignedRealTerm=ruleUnsignedRealTerm 
	 { $current=$iv_ruleUnsignedRealTerm.current; } 
	 EOF 
;

// Rule UnsignedRealTerm
ruleUnsignedRealTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnsignedRealTermAccess().getValueUnsignedRealParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleUnsignedReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnsignedRealTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.UnsignedReal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnsignedRealTermRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getUnsignedRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); 
	}

)
)?)
;





// Entry rule entryRuleUnsignedIntegerTerm
entryRuleUnsignedIntegerTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getUnsignedIntegerTermRule()); }
	 iv_ruleUnsignedIntegerTerm=ruleUnsignedIntegerTerm 
	 { $current=$iv_ruleUnsignedIntegerTerm.current; } 
	 EOF 
;

// Rule UnsignedIntegerTerm
ruleUnsignedIntegerTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getUnsignedIntegerTermAccess().getValueUnsignedIntParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleUnsignedInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getUnsignedIntegerTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"edu.postech.aadl.xtext.propspec.PropSpec.UnsignedInt");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getUnsignedIntegerTermRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getUnsignedIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); 
	}

)
)?)
;





// Entry rule entryRuleUnsignedReal
entryRuleUnsignedReal returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getUnsignedRealRule()); } 
	 iv_ruleUnsignedReal=ruleUnsignedReal 
	 { $current=$iv_ruleUnsignedReal.current.getText(); }  
	 EOF 
;

// Rule UnsignedReal
ruleUnsignedReal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_REAL_LIT_0=RULE_REAL_LIT    {
		$current.merge(this_REAL_LIT_0);
    }

    { 
    newLeafNode(this_REAL_LIT_0, grammarAccess.getUnsignedRealAccess().getREAL_LITTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleUnsignedInt
entryRuleUnsignedInt returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getUnsignedIntRule()); } 
	 iv_ruleUnsignedInt=ruleUnsignedInt 
	 { $current=$iv_ruleUnsignedInt.current.getText(); }  
	 EOF 
;

// Rule UnsignedInt
ruleUnsignedInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_INTEGER_LIT_0=RULE_INTEGER_LIT    {
		$current.merge(this_INTEGER_LIT_0);
    }

    { 
    newLeafNode(this_INTEGER_LIT_0, grammarAccess.getUnsignedIntAccess().getINTEGER_LITTerminalRuleCall()); 
    }

    ;







// Entry rule entryRuleContainedPropertyAssociation
entryRuleContainedPropertyAssociation returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContainedPropertyAssociationRule()); }
	 iv_ruleContainedPropertyAssociation=ruleContainedPropertyAssociation 
	 { $current=$iv_ruleContainedPropertyAssociation.current; } 
	 EOF 
;

// Rule ContainedPropertyAssociation
ruleContainedPropertyAssociation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getPropertyPropertyCrossReference_0_0()); 
	    }
		ruleQPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_1=EqualsSignGreaterThanSign
    {
    	newLeafNode(otherlv_1, grammarAccess.getContainedPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1_0());
    }

    |(
(
		lv_append_2_0=
	PlusSignEqualsSignGreaterThanSign
    {
        newLeafNode(lv_append_2_0, grammarAccess.getContainedPropertyAssociationAccess().getAppendPlusSignEqualsSignGreaterThanSignKeyword_1_1_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		setWithLastConsumed($current, "append", true, "+=>");
	    }

)
))(
(
		lv_constant_3_0=
	Constant
    {
        newLeafNode(lv_constant_3_0, grammarAccess.getContainedPropertyAssociationAccess().getConstantConstantKeyword_2_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		setWithLastConsumed($current, "constant", true, "constant");
	    }

)
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_0_0()); 
	    }
		lv_ownedValue_4_0=ruleOptionalModalPropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.OptionalModalPropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_5=Comma
    {
    	newLeafNode(otherlv_5, grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_3_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getOwnedValueOptionalModalPropertyValueParserRuleCall_3_1_1_0()); 
	    }
		lv_ownedValue_6_0=ruleOptionalModalPropertyValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_6_0, 
        		"org.osate.xtext.aadl2.properties.Properties.OptionalModalPropertyValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*)(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToKeywordsParserRuleCall_4_0()); 
    }
ruleAppliesToKeywords
    {
        afterParserOrEnumRuleCall();
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_1_0()); 
	    }
		lv_appliesTo_8_0=ruleContainmentPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"appliesTo",
        		lv_appliesTo_8_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPath");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_9=Comma
    {
    	newLeafNode(otherlv_9, grammarAccess.getContainedPropertyAssociationAccess().getCommaKeyword_4_2_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getAppliesToContainmentPathParserRuleCall_4_2_1_0()); 
	    }
		lv_appliesTo_10_0=ruleContainmentPath		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainedPropertyAssociationRule());
	        }
       		add(
       			$current, 
       			"appliesTo",
        		lv_appliesTo_10_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPath");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getInBindingKeywordsParserRuleCall_5_0()); 
    }
ruleInBindingKeywords
    {
        afterParserOrEnumRuleCall();
    }

	otherlv_12=LeftParenthesis
    {
    	newLeafNode(otherlv_12, grammarAccess.getContainedPropertyAssociationAccess().getLeftParenthesisKeyword_5_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainedPropertyAssociationRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getContainedPropertyAssociationAccess().getInBindingClassifierCrossReference_5_2_0()); 
	    }
		ruleQCREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_14=RightParenthesis
    {
    	newLeafNode(otherlv_14, grammarAccess.getContainedPropertyAssociationAccess().getRightParenthesisKeyword_5_3());
    }
)?
	otherlv_15=Semicolon
    {
    	newLeafNode(otherlv_15, grammarAccess.getContainedPropertyAssociationAccess().getSemicolonKeyword_6());
    }
)
;









// Entry rule entryRuleContainmentPath
entryRuleContainmentPath returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContainmentPathRule()); }
	 iv_ruleContainmentPath=ruleContainmentPath 
	 { $current=$iv_ruleContainmentPath.current; } 
	 EOF 
;

// Rule ContainmentPath
ruleContainmentPath returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainmentPathAccess().getPathContainmentPathElementParserRuleCall_0()); 
	    }
		lv_path_0_0=ruleContainmentPathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainmentPathRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPathElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
;







// Entry rule entryRuleOptionalModalPropertyValue
entryRuleOptionalModalPropertyValue returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getOptionalModalPropertyValueRule()); }
	 iv_ruleOptionalModalPropertyValue=ruleOptionalModalPropertyValue 
	 { $current=$iv_ruleOptionalModalPropertyValue.current; } 
	 EOF 
;

// Rule OptionalModalPropertyValue
ruleOptionalModalPropertyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getOptionalModalPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0_0()); 
	    }
		lv_ownedValue_0_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getOptionalModalPropertyValueRule());
	        }
       		set(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getOptionalModalPropertyValueAccess().getInModesKeywordsParserRuleCall_1_0()); 
    }
ruleInModesKeywords
    {
        afterParserOrEnumRuleCall();
    }

	otherlv_2=LeftParenthesis
    {
    	newLeafNode(otherlv_2, grammarAccess.getOptionalModalPropertyValueAccess().getLeftParenthesisKeyword_1_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalModalPropertyValueRule());
	        }
        }
	otherlv_3=RULE_ID
	{
		newLeafNode(otherlv_3, grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_2_0()); 
	}

)
)(
	otherlv_4=Comma
    {
    	newLeafNode(otherlv_4, grammarAccess.getOptionalModalPropertyValueAccess().getCommaKeyword_1_3_0());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getOptionalModalPropertyValueRule());
	        }
        }
	otherlv_5=RULE_ID
	{
		newLeafNode(otherlv_5, grammarAccess.getOptionalModalPropertyValueAccess().getInModeModeCrossReference_1_3_1_0()); 
	}

)
))*
	otherlv_6=RightParenthesis
    {
    	newLeafNode(otherlv_6, grammarAccess.getOptionalModalPropertyValueAccess().getRightParenthesisKeyword_1_4());
    }
)?)
;





// Entry rule entryRulePropertyValue
entryRulePropertyValue returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyValueRule()); }
	 iv_rulePropertyValue=rulePropertyValue 
	 { $current=$iv_rulePropertyValue.current; } 
	 EOF 
;

// Rule PropertyValue
rulePropertyValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getPropertyValueAccess().getOwnedValuePropertyExpressionParserRuleCall_0()); 
	    }
		lv_ownedValue_0_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getPropertyValueRule());
	        }
       		set(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRulePropertyExpression
entryRulePropertyExpression returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getPropertyExpressionRule()); }
	 iv_rulePropertyExpression=rulePropertyExpression 
	 { $current=$iv_rulePropertyExpression.current; } 
	 EOF 
;

// Rule PropertyExpression
rulePropertyExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getRecordTermParserRuleCall_0()); 
    }
    this_RecordTerm_0=ruleRecordTerm
    {
        $current = $this_RecordTerm_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getReferenceTermParserRuleCall_1()); 
    }
    this_ReferenceTerm_1=ruleReferenceTerm
    {
        $current = $this_ReferenceTerm_1.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getComponentClassifierTermParserRuleCall_2()); 
    }
    this_ComponentClassifierTerm_2=ruleComponentClassifierTerm
    {
        $current = $this_ComponentClassifierTerm_2.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getComputedTermParserRuleCall_3()); 
    }
    this_ComputedTerm_3=ruleComputedTerm
    {
        $current = $this_ComputedTerm_3.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getStringTermParserRuleCall_4()); 
    }
    this_StringTerm_4=ruleStringTerm
    {
        $current = $this_StringTerm_4.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getNumericRangeTermParserRuleCall_5()); 
    }
    this_NumericRangeTerm_5=ruleNumericRangeTerm
    {
        $current = $this_NumericRangeTerm_5.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getRealTermParserRuleCall_6()); 
    }
    this_RealTerm_6=ruleRealTerm
    {
        $current = $this_RealTerm_6.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getIntegerTermParserRuleCall_7()); 
    }
    this_IntegerTerm_7=ruleIntegerTerm
    {
        $current = $this_IntegerTerm_7.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getListTermParserRuleCall_8()); 
    }
    this_ListTerm_8=ruleListTerm
    {
        $current = $this_ListTerm_8.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getBooleanLiteralParserRuleCall_9()); 
    }
    this_BooleanLiteral_9=ruleBooleanLiteral
    {
        $current = $this_BooleanLiteral_9.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getPropertyExpressionAccess().getLiteralorReferenceTermParserRuleCall_10()); 
    }
    this_LiteralorReferenceTerm_10=ruleLiteralorReferenceTerm
    {
        $current = $this_LiteralorReferenceTerm_10.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleLiteralorReferenceTerm
entryRuleLiteralorReferenceTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getLiteralorReferenceTermRule()); }
	 iv_ruleLiteralorReferenceTerm=ruleLiteralorReferenceTerm 
	 { $current=$iv_ruleLiteralorReferenceTerm.current; } 
	 EOF 
;

// Rule LiteralorReferenceTerm
ruleLiteralorReferenceTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getLiteralorReferenceTermRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getLiteralorReferenceTermAccess().getNamedValueAbstractNamedValueCrossReference_0()); 
	    }
		ruleQPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleBooleanLiteral
entryRuleBooleanLiteral returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getBooleanLiteralRule()); }
	 iv_ruleBooleanLiteral=ruleBooleanLiteral 
	 { $current=$iv_ruleBooleanLiteral.current; } 
	 EOF 
;

// Rule BooleanLiteral
ruleBooleanLiteral returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getBooleanLiteralAccess().getBooleanLiteralAction_0(),
            $current);
    }
)((
(
		lv_value_1_0=
	True
    {
        newLeafNode(lv_value_1_0, grammarAccess.getBooleanLiteralAccess().getValueTrueKeyword_1_0_0());
    }

	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getBooleanLiteralRule());
	        }
       		setWithLastConsumed($current, "value", true, "true");
	    }

)
)
    |
	otherlv_2=False
    {
    	newLeafNode(otherlv_2, grammarAccess.getBooleanLiteralAccess().getFalseKeyword_1_1());
    }
))
;





// Entry rule entryRuleConstantValue
entryRuleConstantValue returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getConstantValueRule()); }
	 iv_ruleConstantValue=ruleConstantValue 
	 { $current=$iv_ruleConstantValue.current; } 
	 EOF 
;

// Rule ConstantValue
ruleConstantValue returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getConstantValueRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getConstantValueAccess().getNamedValuePropertyConstantCrossReference_0()); 
	    }
		ruleQPREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleReferenceTerm
entryRuleReferenceTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getReferenceTermRule()); }
	 iv_ruleReferenceTerm=ruleReferenceTerm 
	 { $current=$iv_ruleReferenceTerm.current; } 
	 EOF 
;

// Rule ReferenceTerm
ruleReferenceTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Reference
    {
    	newLeafNode(otherlv_0, grammarAccess.getReferenceTermAccess().getReferenceKeyword_0());
    }

	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getReferenceTermAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getReferenceTermAccess().getPathContainmentPathElementParserRuleCall_2_0()); 
	    }
		lv_path_2_0=ruleContainmentPathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getReferenceTermRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPathElement");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=RightParenthesis
    {
    	newLeafNode(otherlv_3, grammarAccess.getReferenceTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleRecordTerm
entryRuleRecordTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRecordTermRule()); }
	 iv_ruleRecordTerm=ruleRecordTerm 
	 { $current=$iv_ruleRecordTerm.current; } 
	 EOF 
;

// Rule RecordTerm
ruleRecordTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=LeftSquareBracket
    {
    	newLeafNode(otherlv_0, grammarAccess.getRecordTermAccess().getLeftSquareBracketKeyword_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getRecordTermAccess().getOwnedFieldValueFieldPropertyAssociationParserRuleCall_1_0()); 
	    }
		lv_ownedFieldValue_1_0=ruleFieldPropertyAssociation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRecordTermRule());
	        }
       		add(
       			$current, 
       			"ownedFieldValue",
        		lv_ownedFieldValue_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.FieldPropertyAssociation");
	        afterParserOrEnumRuleCall();
	    }

)
)+
	otherlv_2=RightSquareBracket
    {
    	newLeafNode(otherlv_2, grammarAccess.getRecordTermAccess().getRightSquareBracketKeyword_2());
    }
)
;







// Entry rule entryRuleComputedTerm
entryRuleComputedTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getComputedTermRule()); }
	 iv_ruleComputedTerm=ruleComputedTerm 
	 { $current=$iv_ruleComputedTerm.current; } 
	 EOF 
;

// Rule ComputedTerm
ruleComputedTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Compute
    {
    	newLeafNode(otherlv_0, grammarAccess.getComputedTermAccess().getComputeKeyword_0());
    }

	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getComputedTermAccess().getLeftParenthesisKeyword_1());
    }
(
(
		lv_function_2_0=RULE_ID
		{
			newLeafNode(lv_function_2_0, grammarAccess.getComputedTermAccess().getFunctionIDTerminalRuleCall_2_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getComputedTermRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"function",
        		lv_function_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ID");
	    }

)
)
	otherlv_3=RightParenthesis
    {
    	newLeafNode(otherlv_3, grammarAccess.getComputedTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleComponentClassifierTerm
entryRuleComponentClassifierTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getComponentClassifierTermRule()); }
	 iv_ruleComponentClassifierTerm=ruleComponentClassifierTerm 
	 { $current=$iv_ruleComponentClassifierTerm.current; } 
	 EOF 
;

// Rule ComponentClassifierTerm
ruleComponentClassifierTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	otherlv_0=Classifier
    {
    	newLeafNode(otherlv_0, grammarAccess.getComponentClassifierTermAccess().getClassifierKeyword_0());
    }

	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getComponentClassifierTermAccess().getLeftParenthesisKeyword_1());
    }
(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getComponentClassifierTermRule());
	        }
        }
		{ 
	        newCompositeNode(grammarAccess.getComponentClassifierTermAccess().getClassifierComponentClassifierCrossReference_2_0()); 
	    }
		ruleQCREF
		{ 
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=RightParenthesis
    {
    	newLeafNode(otherlv_3, grammarAccess.getComponentClassifierTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleListTerm
entryRuleListTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getListTermRule()); }
	 iv_ruleListTerm=ruleListTerm 
	 { $current=$iv_ruleListTerm.current; } 
	 EOF 
;

// Rule ListTerm
ruleListTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getListTermAccess().getListValueAction_0(),
            $current);
    }
)
	otherlv_1=LeftParenthesis
    {
    	newLeafNode(otherlv_1, grammarAccess.getListTermAccess().getLeftParenthesisKeyword_1());
    }
((
(
		{ 
	        newCompositeNode(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_0_0()); 
	    }
		lv_ownedListElement_2_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTermRule());
	        }
       		add(
       			$current, 
       			"ownedListElement",
        		lv_ownedListElement_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=Comma
    {
    	newLeafNode(otherlv_3, grammarAccess.getListTermAccess().getCommaKeyword_2_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getListTermAccess().getOwnedListElementPropertyExpressionParserRuleCall_2_1_1_0()); 
	    }
		lv_ownedListElement_4_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getListTermRule());
	        }
       		add(
       			$current, 
       			"ownedListElement",
        		lv_ownedListElement_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
))*)?
	otherlv_5=RightParenthesis
    {
    	newLeafNode(otherlv_5, grammarAccess.getListTermAccess().getRightParenthesisKeyword_3());
    }
)
;





// Entry rule entryRuleFieldPropertyAssociation
entryRuleFieldPropertyAssociation returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getFieldPropertyAssociationRule()); }
	 iv_ruleFieldPropertyAssociation=ruleFieldPropertyAssociation 
	 { $current=$iv_ruleFieldPropertyAssociation.current; } 
	 EOF 
;

// Rule FieldPropertyAssociation
ruleFieldPropertyAssociation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getFieldPropertyAssociationRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getFieldPropertyAssociationAccess().getPropertyBasicPropertyCrossReference_0_0()); 
	}

)
)
	otherlv_1=EqualsSignGreaterThanSign
    {
    	newLeafNode(otherlv_1, grammarAccess.getFieldPropertyAssociationAccess().getEqualsSignGreaterThanSignKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getFieldPropertyAssociationAccess().getOwnedValuePropertyExpressionParserRuleCall_2_0()); 
	    }
		lv_ownedValue_2_0=rulePropertyExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFieldPropertyAssociationRule());
	        }
       		set(
       			$current, 
       			"ownedValue",
        		lv_ownedValue_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PropertyExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_3=Semicolon
    {
    	newLeafNode(otherlv_3, grammarAccess.getFieldPropertyAssociationAccess().getSemicolonKeyword_3());
    }
)
;





// Entry rule entryRuleContainmentPathElement
entryRuleContainmentPathElement returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getContainmentPathElementRule()); }
	 iv_ruleContainmentPathElement=ruleContainmentPathElement 
	 { $current=$iv_ruleContainmentPathElement.current; } 
	 EOF 
;

// Rule ContainmentPathElement
ruleContainmentPathElement returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(((
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getContainmentPathElementRule());
	        }
        }
	otherlv_0=RULE_ID
	{
		newLeafNode(otherlv_0, grammarAccess.getContainmentPathElementAccess().getNamedElementNamedElementCrossReference_0_0_0()); 
	}

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getContainmentPathElementAccess().getArrayRangeArrayRangeParserRuleCall_0_1_0()); 
	    }
		lv_arrayRange_1_0=ruleArrayRange		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainmentPathElementRule());
	        }
       		add(
       			$current, 
       			"arrayRange",
        		lv_arrayRange_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ArrayRange");
	        afterParserOrEnumRuleCall();
	    }

)
)*)(
	otherlv_2=FullStop
    {
    	newLeafNode(otherlv_2, grammarAccess.getContainmentPathElementAccess().getFullStopKeyword_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getContainmentPathElementAccess().getPathContainmentPathElementParserRuleCall_1_1_0()); 
	    }
		lv_path_3_0=ruleContainmentPathElement		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getContainmentPathElementRule());
	        }
       		set(
       			$current, 
       			"path",
        		lv_path_3_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ContainmentPathElement");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;







// Entry rule entryRulePlusMinus
entryRulePlusMinus returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getPlusMinusRule()); } 
	 iv_rulePlusMinus=rulePlusMinus 
	 { $current=$iv_rulePlusMinus.current.getText(); }  
	 EOF 
;

// Rule PlusMinus
rulePlusMinus returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=PlusSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPlusMinusAccess().getPlusSignKeyword_0()); 
    }

    |
	kw=HyphenMinus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getPlusMinusAccess().getHyphenMinusKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleStringTerm
entryRuleStringTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getStringTermRule()); }
	 iv_ruleStringTerm=ruleStringTerm 
	 { $current=$iv_ruleStringTerm.current; } 
	 EOF 
;

// Rule StringTerm
ruleStringTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getStringTermAccess().getValueNoQuoteStringParserRuleCall_0()); 
	    }
		lv_value_0_0=ruleNoQuoteString		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getStringTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NoQuoteString");
	        afterParserOrEnumRuleCall();
	    }

)
)
;





// Entry rule entryRuleNoQuoteString
entryRuleNoQuoteString returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getNoQuoteStringRule()); } 
	 iv_ruleNoQuoteString=ruleNoQuoteString 
	 { $current=$iv_ruleNoQuoteString.current.getText(); }  
	 EOF 
;

// Rule NoQuoteString
ruleNoQuoteString returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getNoQuoteStringAccess().getSTRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleArrayRange
entryRuleArrayRange returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getArrayRangeRule()); }
	 iv_ruleArrayRange=ruleArrayRange 
	 { $current=$iv_ruleArrayRange.current; } 
	 EOF 
;

// Rule ArrayRange
ruleArrayRange returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getArrayRangeAccess().getArrayRangeAction_0(),
            $current);
    }
)
	otherlv_1=LeftSquareBracket
    {
    	newLeafNode(otherlv_1, grammarAccess.getArrayRangeAccess().getLeftSquareBracketKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayRangeAccess().getLowerBoundINTVALUEParserRuleCall_2_0()); 
	    }
		lv_lowerBound_2_0=ruleINTVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRangeRule());
	        }
       		set(
       			$current, 
       			"lowerBound",
        		lv_lowerBound_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTVALUE");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=FullStopFullStop
    {
    	newLeafNode(otherlv_3, grammarAccess.getArrayRangeAccess().getFullStopFullStopKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getArrayRangeAccess().getUpperBoundINTVALUEParserRuleCall_3_1_0()); 
	    }
		lv_upperBound_4_0=ruleINTVALUE		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getArrayRangeRule());
	        }
       		set(
       			$current, 
       			"upperBound",
        		lv_upperBound_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.INTVALUE");
	        afterParserOrEnumRuleCall();
	    }

)
))?
	otherlv_5=RightSquareBracket
    {
    	newLeafNode(otherlv_5, grammarAccess.getArrayRangeAccess().getRightSquareBracketKeyword_4());
    }
)
;





// Entry rule entryRuleSignedConstant
entryRuleSignedConstant returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getSignedConstantRule()); }
	 iv_ruleSignedConstant=ruleSignedConstant 
	 { $current=$iv_ruleSignedConstant.current; } 
	 EOF 
;

// Rule SignedConstant
ruleSignedConstant returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getSignedConstantAccess().getOpPlusMinusParserRuleCall_0_0()); 
	    }
		lv_op_0_0=rulePlusMinus		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignedConstantRule());
	        }
       		set(
       			$current, 
       			"op",
        		lv_op_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.PlusMinus");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSignedConstantAccess().getOwnedPropertyExpressionConstantValueParserRuleCall_1_0()); 
	    }
		lv_ownedPropertyExpression_1_0=ruleConstantValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSignedConstantRule());
	        }
       		add(
       			$current, 
       			"ownedPropertyExpression",
        		lv_ownedPropertyExpression_1_0, 
        		"org.osate.xtext.aadl2.properties.Properties.ConstantValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
;





// Entry rule entryRuleIntegerTerm
entryRuleIntegerTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getIntegerTermRule()); }
	 iv_ruleIntegerTerm=ruleIntegerTerm 
	 { $current=$iv_ruleIntegerTerm.current; } 
	 EOF 
;

// Rule IntegerTerm
ruleIntegerTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getIntegerTermAccess().getValueSignedIntParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSignedInt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getIntegerTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.SignedInt");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getIntegerTermRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getIntegerTermAccess().getUnitUnitLiteralCrossReference_1_0()); 
	}

)
)?)
;





// Entry rule entryRuleSignedInt
entryRuleSignedInt returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSignedIntRule()); } 
	 iv_ruleSignedInt=ruleSignedInt 
	 { $current=$iv_ruleSignedInt.current.getText(); }  
	 EOF 
;

// Rule SignedInt
ruleSignedInt returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((
	kw=PlusSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedIntAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw=HyphenMinus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedIntAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_INTEGER_LIT_2=RULE_INTEGER_LIT    {
		$current.merge(this_INTEGER_LIT_2);
    }

    { 
    newLeafNode(this_INTEGER_LIT_2, grammarAccess.getSignedIntAccess().getINTEGER_LITTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleRealTerm
entryRuleRealTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getRealTermRule()); }
	 iv_ruleRealTerm=ruleRealTerm 
	 { $current=$iv_ruleRealTerm.current; } 
	 EOF 
;

// Rule RealTerm
ruleRealTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getRealTermAccess().getValueSignedRealParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleSignedReal		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getRealTermRule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.SignedReal");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
		  /* */ 
		}
		{
			if ($current==null) {
	            $current = createModelElement(grammarAccess.getRealTermRule());
	        }
        }
	otherlv_1=RULE_ID
	{
		newLeafNode(otherlv_1, grammarAccess.getRealTermAccess().getUnitUnitLiteralCrossReference_1_0()); 
	}

)
)?)
;





// Entry rule entryRuleSignedReal
entryRuleSignedReal returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSignedRealRule()); } 
	 iv_ruleSignedReal=ruleSignedReal 
	 { $current=$iv_ruleSignedReal.current.getText(); }  
	 EOF 
;

// Rule SignedReal
ruleSignedReal returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((
	kw=PlusSign 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedRealAccess().getPlusSignKeyword_0_0()); 
    }

    |
	kw=HyphenMinus 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSignedRealAccess().getHyphenMinusKeyword_0_1()); 
    }
)?    this_REAL_LIT_2=RULE_REAL_LIT    {
		$current.merge(this_REAL_LIT_2);
    }

    { 
    newLeafNode(this_REAL_LIT_2, grammarAccess.getSignedRealAccess().getREAL_LITTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleNumericRangeTerm
entryRuleNumericRangeTerm returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNumericRangeTermRule()); }
	 iv_ruleNumericRangeTerm=ruleNumericRangeTerm 
	 { $current=$iv_ruleNumericRangeTerm.current; } 
	 EOF 
;

// Rule NumericRangeTerm
ruleNumericRangeTerm returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getNumericRangeTermAccess().getMinimumNumAltParserRuleCall_0_0()); 
	    }
		lv_minimum_0_0=ruleNumAlt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericRangeTermRule());
	        }
       		set(
       			$current, 
       			"minimum",
        		lv_minimum_0_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NumAlt");
	        afterParserOrEnumRuleCall();
	    }

)
)
	otherlv_1=FullStopFullStop
    {
    	newLeafNode(otherlv_1, grammarAccess.getNumericRangeTermAccess().getFullStopFullStopKeyword_1());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericRangeTermAccess().getMaximumNumAltParserRuleCall_2_0()); 
	    }
		lv_maximum_2_0=ruleNumAlt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericRangeTermRule());
	        }
       		set(
       			$current, 
       			"maximum",
        		lv_maximum_2_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NumAlt");
	        afterParserOrEnumRuleCall();
	    }

)
)(
	otherlv_3=Delta
    {
    	newLeafNode(otherlv_3, grammarAccess.getNumericRangeTermAccess().getDeltaKeyword_3_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getNumericRangeTermAccess().getDeltaNumAltParserRuleCall_3_1_0()); 
	    }
		lv_delta_4_0=ruleNumAlt		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getNumericRangeTermRule());
	        }
       		set(
       			$current, 
       			"delta",
        		lv_delta_4_0, 
        		"org.osate.xtext.aadl2.properties.Properties.NumAlt");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleNumAlt
entryRuleNumAlt returns [EObject current=null]
	:
	{ newCompositeNode(grammarAccess.getNumAltRule()); }
	 iv_ruleNumAlt=ruleNumAlt 
	 { $current=$iv_ruleNumAlt.current; } 
	 EOF 
;

// Rule NumAlt
ruleNumAlt returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getRealTermParserRuleCall_0()); 
    }
    this_RealTerm_0=ruleRealTerm
    {
        $current = $this_RealTerm_0.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getIntegerTermParserRuleCall_1()); 
    }
    this_IntegerTerm_1=ruleIntegerTerm
    {
        $current = $this_IntegerTerm_1.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getSignedConstantParserRuleCall_2()); 
    }
    this_SignedConstant_2=ruleSignedConstant
    {
        $current = $this_SignedConstant_2.current;
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getNumAltAccess().getConstantValueParserRuleCall_3()); 
    }
    this_ConstantValue_3=ruleConstantValue
    {
        $current = $this_ConstantValue_3.current;
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAppliesToKeywords
entryRuleAppliesToKeywords returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getAppliesToKeywordsRule()); } 
	 iv_ruleAppliesToKeywords=ruleAppliesToKeywords 
	 { $current=$iv_ruleAppliesToKeywords.current.getText(); }  
	 EOF 
;

// Rule AppliesToKeywords
ruleAppliesToKeywords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=Applies 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAppliesToKeywordsAccess().getAppliesKeyword_0()); 
    }

	kw=To 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getAppliesToKeywordsAccess().getToKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleInBindingKeywords
entryRuleInBindingKeywords returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getInBindingKeywordsRule()); } 
	 iv_ruleInBindingKeywords=ruleInBindingKeywords 
	 { $current=$iv_ruleInBindingKeywords.current.getText(); }  
	 EOF 
;

// Rule InBindingKeywords
ruleInBindingKeywords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=In 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInBindingKeywordsAccess().getInKeyword_0()); 
    }

	kw=Binding 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInBindingKeywordsAccess().getBindingKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleInModesKeywords
entryRuleInModesKeywords returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getInModesKeywordsRule()); } 
	 iv_ruleInModesKeywords=ruleInModesKeywords 
	 { $current=$iv_ruleInModesKeywords.current.getText(); }  
	 EOF 
;

// Rule InModesKeywords
ruleInModesKeywords returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(
	kw=In 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInModesKeywordsAccess().getInKeyword_0()); 
    }

	kw=Modes 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getInModesKeywordsAccess().getModesKeyword_1()); 
    }
)
    ;





// Entry rule entryRuleINTVALUE
entryRuleINTVALUE returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getINTVALUERule()); } 
	 iv_ruleINTVALUE=ruleINTVALUE 
	 { $current=$iv_ruleINTVALUE.current.getText(); }  
	 EOF 
;

// Rule INTVALUE
ruleINTVALUE returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
    this_INTEGER_LIT_0=RULE_INTEGER_LIT    {
		$current.merge(this_INTEGER_LIT_0);
    }

    { 
    newLeafNode(this_INTEGER_LIT_0, grammarAccess.getINTVALUEAccess().getINTEGER_LITTerminalRuleCall()); 
    }

    ;







// Entry rule entryRuleQPREF
entryRuleQPREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQPREFRule()); } 
	 iv_ruleQPREF=ruleQPREF 
	 { $current=$iv_ruleQPREF.current.getText(); }  
	 EOF 
;

// Rule QPREF
ruleQPREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
(    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_0()); 
    }
(
	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQPREFAccess().getColonColonKeyword_1_0()); 
    }
    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQPREFAccess().getIDTerminalRuleCall_1_1()); 
    }
)?)
    ;





// Entry rule entryRuleQCREF
entryRuleQCREF returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getQCREFRule()); } 
	 iv_ruleQCREF=ruleQCREF 
	 { $current=$iv_ruleQCREF.current.getText(); }  
	 EOF 
;

// Rule QCREF
ruleQCREF returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:
((    this_ID_0=RULE_ID    {
		$current.merge(this_ID_0);
    }

    { 
    newLeafNode(this_ID_0, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_0_0()); 
    }

	kw=ColonColon 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCREFAccess().getColonColonKeyword_0_1()); 
    }
)*    this_ID_2=RULE_ID    {
		$current.merge(this_ID_2);
    }

    { 
    newLeafNode(this_ID_2, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_1()); 
    }
(
	kw=FullStop 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getQCREFAccess().getFullStopKeyword_2_0()); 
    }
    this_ID_4=RULE_ID    {
		$current.merge(this_ID_4);
    }

    { 
    newLeafNode(this_ID_4, grammarAccess.getQCREFAccess().getIDTerminalRuleCall_2_1()); 
    }
)?)
    ;





// Entry rule entryRuleSTAR
entryRuleSTAR returns [String current=null] 
:
	{ newCompositeNode(grammarAccess.getSTARRule()); } 
	 iv_ruleSTAR=ruleSTAR 
	 { $current=$iv_ruleSTAR.current.getText(); }  
	 EOF 
;

// Rule STAR
ruleSTAR returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule();
    }:

	kw=Asterisk 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getSTARAccess().getAsteriskKeyword()); 
    }

    ;





