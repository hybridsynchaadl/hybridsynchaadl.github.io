package Drone
public
	with Environment;
	with Base_Types;
	with Data_Model;
	with DroneControl;

	system FormDrone
		features
			inX: in data port Base_Types::Float;
			inVX: in data port Base_Types::Float;
			refX: in data port Base_Types::Float;
			refVX: in data port Base_Types::Float;			
			outX: out data port Base_Types::Float {Data_Model::Initial_Value => ("0");};
			outVX: out data port Base_Types::Float {Data_Model::Initial_Value => ("0");};
	end FormDrone;
	system implementation FormDrone.impl
		subcomponents
			drone: system DroneControl::FormDroneControl.impl;
			environment: system Environment::Environment.impl;
		connections
			C1: port drone.outX -> outX;
			C2: port drone.outVX -> outVX;
			C3: port inX -> drone.inX;
			C4: port inVX -> drone.inVX;
			C5: port drone.accX -> environment.accX;
			C6: port environment.currX -> drone.currX;
			C7: port environment.currVX -> drone.currVX;
			C8: port refX -> drone.refX;
			C9: port refVX -> drone.refVX;				
	end FormDrone.impl;
end Drone;