package TwoWaterTankSystem
public
	with Hybrid_SynchAADL;
	with LeftWaterTank;
	with RightWaterTank;
	with LeftEnvironment;
	with RightEnvironment;
	with Data_Model;
	
	system TwoWaterTankSystem
		properties
			Hybrid_SynchAADL::Synchronous => true;
	end TwoWaterTankSystem;
	
	system implementation TwoWaterTankSystem.simple
		subcomponents
			waterTank1: system LeftWaterTank::LeftWaterTank.simple;
			waterTank2: system RightWaterTank::RightWaterTank.simple;
			
			env1: system LeftEnvironment::LeftEnvironment.impl;
			env2: system RightEnvironment::RightEnvironment.impl;
		connections
			C11: port waterTank1.on_control -> env1.on_control;
			C12: port waterTank1.off_control -> env1.off_control;
			C13: port waterTank1.power -> env1.power;
			C14: port env1.decreased_water -> waterTank1.decreased_water;
			C15: port env1.curr_water -> waterTank1.curr_water;
			C16: port waterTank1.released_water -> waterTank2.incoming_water;
			
			C21: port waterTank2.on_control -> env2.on_control;
			C22: port waterTank2.off_control -> env2.off_control;
			C23: port waterTank2.power -> env2.power;
			C24: port env2.curr_water -> waterTank2.curr_water;
			C25: port waterTank2.increased_water -> env2.increased_water;
			
		properties
			Period => 100ms;
			
            Timing => Delayed applies to C16;
            
           Hybrid_SynchAADL::Max_Clock_Deviation => 5ms;
            
            Hybrid_SynchAADL::Sampling_Time => 20ms .. 30ms applies to 
                waterTank1, waterTank2;
                
            Hybrid_SynchAADL::Response_Time => 60ms .. 80ms applies to 
                waterTank1, waterTank2;
            
            Data_Model::Initial_Value => ("param") applies to 
            	env1.water, env2.water;
            Data_Model::Initial_Value => ("0") applies to 
            	env1.decrease, env2.decrease;
            Data_Model::Initial_Value => ("0") applies to 
            	env1.pump_power, env2.pump_power;
            Data_Model::Initial_Value => ("0") applies to 
            	env2.increase;
	end TwoWaterTankSystem.simple;
	
	system implementation TwoWaterTankSystem.complex extends TwoWaterTankSystem.simple
		subcomponents
			waterTank1: refined to system LeftWaterTank::LeftWaterTank.complex;
			waterTank2: refined to system RightWaterTank::RightWaterTank.complex;
	end TwoWaterTankSystem.complex;	
	
end TwoWaterTankSystem;
