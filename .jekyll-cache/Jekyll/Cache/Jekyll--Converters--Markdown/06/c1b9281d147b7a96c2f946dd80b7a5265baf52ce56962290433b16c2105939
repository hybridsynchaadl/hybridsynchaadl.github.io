I"‡<p>This benchmark models represent the rendezvous control of distributed drones
with single-integrator dynamics. Each drone communicates its own position and
sets a proper velocity. The goal of these models is for all drones to arrive
near a common location simultaneously without any collision.</p>

<h3 id="download">Download</h3>
<p>You can download the benchmark models: <a href="../Drone_Rendezvous_Single.zip">Drone_Rendezvous_Single.zip</a></p>

<h3 id="architecture">Architecture</h3>
<p><img src="../../images/architecture_rendezvous_single.png" width="80%" height="80%" /></p>

<h3 id="hybridsynchaadl-model-controller-and-environment">HybridSynchAADL Model: Controller and Environment</h3>
<p>Controller.aadl</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>thread Drone2DControlThread extends Drone1DControlThread
  features
    inY: in data port Base_Types::Float;
    outY : out data port Base_Types::Float;
    currY: in data port Base_Types::Float;
    velY : out data port Base_Types::Float;
  properties
    Dispatch_Protocol =&gt; Periodic;
end Drone2DControlThread;
thread implementation Drone2DControlThread.impl extends Drone1DControlThread.impl
  annex behavior_specification {**
    variables
      nx : Base_Types::Float;
      ny : Base_Types::Float;
    states
      init : initial complete state;
      exec, output : state;
    transitions
      init -[on dispatch]-&gt; exec;
      exec -[abs(currX - inX) &lt; 0.1 and abs(currY - inY) &lt; 0.1]-&gt; output {
        velX := 0; velY := 0
      };
      exec -[otherwise]-&gt; output {
        nx := - #DroneSpec::A * (currX - inX); 
        ny := - #DroneSpec::A * (currY - inY); 
        if (nx &gt; 1)      velX := 2
        elsif (nx &gt; -0.1)  velX := 0
        else        velX := -2
        end if;
        if (ny &gt; 1)      velY := 2
        elsif (ny &gt; -0.1)  velY := 0
        else        velY := -2
        end if
      };
      output -[ ]-&gt; init {
        outX := currX;
        outY := currY
      };
**};
end Drone2DControlThread.impl;
</code></pre></div></div>
<p>Environment.aadl</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>system Environment2D extends Environment1D
  features
    currY : out data port Base_Types::Float;    
    velY : in data port Base_Types::Float;
  properties
    Hybrid_SynchAADL::isEnvironment =&gt; true;  
end Environment2D;
system implementation Environment2D.impl extends Environment1D.impl
  subcomponents
    y : data Base_Types::Float;
    doty : data Base_Types::Float;
  connections
    C3: port y -&gt; currY;
    C4: port velY -&gt; doty;
  properties
    Hybrid_SynchAADL::ContinuousDynamics =&gt;
     "x(t) = ((0.001) * dotx * t) + x(0); y(t) = ((0.001) * doty * t) + y(0);";
end Environment2D.impl;
</code></pre></div></div>

<h3 id="safety-requirement">Safety Requirement</h3>

<p>We analyze the safety invariant property where drones do not collide up to
bound 500 ms.</p>

<p>four-2d-inv-false.pspc:</p>
<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>proposition [initial] : abs(drone1.env.x - 0.0) &lt; 0.1 and abs(drone1.env.y - 0.0) &lt; 0.1 and
			abs(drone2.env.x - 1.0) &lt; 0.1 and abs(drone2.env.y - 1.0) &lt; 0.1 and
			abs(drone3.env.x - 2.0) &lt; 0.1 and abs(drone3.env.y - 2.0) &lt; 0.1 and
			abs(drone4.env.x - 3.0) &lt; 0.1 and abs(drone4.env.y - 3.0) &lt; 0.1;

proposition [someClose] : (abs(drone1.env.x-drone2.env.x)&lt;0.5 and abs(drone1.env.y-drone2.env.y)&lt;0.5) or
			  (abs(drone1.env.x-drone3.env.x)&lt;0.5 and abs(drone1.env.y-drone3.env.y)&lt;0.5) or
			  (abs(drone1.env.x-drone4.env.x)&lt;0.5 and abs(drone1.env.y-drone4.env.y)&lt;0.5) or
			  (abs(drone2.env.x-drone3.env.x)&lt;0.5 and abs(drone2.env.y-drone3.env.y)&lt;0.5) or
			  (abs(drone2.env.x-drone4.env.x)&lt;0.5 and abs(drone2.env.y-drone4.env.y)&lt;0.5) or
			  (abs(drone3.env.x-drone4.env.x)&lt;0.5 and abs(drone3.env.y-drone4.env.y)&lt;0.5);

invariant [tb_500] : ?initial ==&gt; not(?someClose) in time 500;
</code></pre></div></div>

<h3 id="analysis-results">Analysis Results</h3>
<p><img src="../../images/results_rendezvous_single.png" /></p>

<p><br />
<br /></p>
:ET